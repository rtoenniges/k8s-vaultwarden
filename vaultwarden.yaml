apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vaultwarden
      app.kubernetes.io/instance: vaultwarden
  template:
    metadata:
      name: vaultwarden
      labels:
        app.kubernetes.io/name: vaultwarden
        app.kubernetes.io/instance: vaultwarden
    spec:
      volumes:
        - name: vaultwarden-pv-storage
          persistentVolumeClaim:
            claimName: vaultwarden-pv-claim
      containers:
        - name: vaultwarden
          image: vaultwarden/server:latest
          env:
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-admin
                  key: admin-token
            - name: WEBSOCKET_ENABLED
              value: "true"
          securityContext:
            privileged: false
          volumeMounts:
            - mountPath: "/data"
              name: vaultwarden-pv-storage
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /index.html
              port: 80
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vaultwarden-pv-claim
  namespace: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden  
spec:
#  storageClassName: nfs-client # Needs to be specified if no default class is set
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
spec:
  selector:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: websocket
      protocol: TCP
      port: 3012
      targetPort: 3012
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden-http
  namespace: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
spec:
#  ingressClassName: nginx # Needs to be specified if no default class is set
  tls:
  - hosts:
    - <My-Vault-Hostname>
  rules:
  - host: <My-Vault-Hostname>
    http:
      paths:
      - backend:
          service:
            name: vaultwarden
            port:
              number: 80
        path: /
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden-websocket
  namespace: vaultwarden
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
      }
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
spec:
#  ingressClassName: nginx # Needs to be specified if no default class is set
  tls:
  - hosts:
    - <My-Vault-Hostname>
  rules:
  - host: <My-Vault-Hostname>
    http:
      paths:
      - backend:
          service:
            name: vaultwarden
            port:
              number: 3012
        path: /notifications/hub
        pathType: Exact
---
apiVersion: v1
kind: Secret
metadata:
  name: vaultwarden-admin
  namespace: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
type: Opaque
stringData:
  admin-token: <Secure-Admin-Token> # Generate with 'openssl rand -base64 48'
